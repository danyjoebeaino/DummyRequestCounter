name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -----------------------------
  # 1️⃣  CODE QUALITY & SECURITY
  # -----------------------------
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit

      - name: Lint (flake8)
        run: flake8 .

      - name: Security scan (bandit)
        run: bandit -r .

  # -----------------------------
  # 2️⃣  RUN UNIT TESTS
  # -----------------------------
  tests:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx fakeredis

      - name: Run unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -v tests/

  # -----------------------------
  # 3️⃣  BUILD DOCKER IMAGE
  # -----------------------------
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        run: |
          IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker build -t "${IMAGE_NAME}:ci" .

  # -----------------------------
  # 4️⃣  PUSH TO DOCKER HUB
  # -----------------------------
  push_dockerhub:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push to Docker Hub
        run: |
          IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker build -t "${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter:latest" .
          docker push "${{ secrets.DOCKER_USERNAME }}/dummyrequestcounter:latest"
